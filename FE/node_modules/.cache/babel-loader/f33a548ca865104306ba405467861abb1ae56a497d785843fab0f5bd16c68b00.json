{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import'./UserLimitScreen2.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function UserLimitScreen2(){const[selectedStore,setSelectedStore]=useState(null);const[budget,setBudget]=useState('');const navigate=useNavigate();// 가게 선택 핸들러\nconst handleStoreClick=store=>{setSelectedStore(store);};// 예산 입력 핸들러\nconst handleBudgetChange=e=>{setBudget(e.target.value);};// \"다음으로\" 버튼 클릭 시 UserInputScreen으로 이동 및 API 호출\nconst handleNextClick=async()=>{if(selectedStore&&budget>=3000){// 서버로 데이터 전송\ntry{const response=await fetch('/api/filter_menus',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({store_type:selectedStore,max_price:budget})});const data=await response.json();if(data.success){console.log('필터링된 메뉴 목록:',data.menu_list);// 데이터를 받아서 다음 페이지로 넘길 수 있음\nnavigate('/user-input');}else{console.error('메뉴 가져오기 오류:',data.error);}}catch(error){console.error('API 호출 오류:',error);}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"user-limit-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"logo-section\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"\\uCFE0\\uC787\\uB098\\uC6B0 \\uB85C\\uACE0\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uAC00\\uAC8C \\uC885\\uB958\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uCC3E\\uACE0 \\uC788\\uB294 \\uAC00\\uAC8C\\uC758 \\uC885\\uB958\\uC5D0 \\uB530\\uB77C \\uC9C8\\uBB38\\uC774 \\uB2EC\\uB77C\\uC838\\uC694.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"store-buttons\",children:['밥집','카페','술집'].map(store=>/*#__PURE__*/_jsx(\"button\",{className:`store-button ${selectedStore===store?'selected':''}`,onClick:()=>handleStoreClick(store),children:store},store))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uC2DD\\uC0AC \\uC608\\uC0B0\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uB2E4\\uC591\\uD55C \\uBA54\\uB274 \\uCD94\\uCC9C\\uC744 \\uC704\\uD574\",/*#__PURE__*/_jsx(\"br\",{}),\"4000\\uC6D0 \\uC774\\uC0C1\\uC744 \\uC785\\uB825\\uD558\\uB294 \\uAC78 \\uAD8C\\uC7A5\\uD574\\uC694.\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"budget-input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"\\uC608\\uC0B0\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",value:budget,onChange:handleBudgetChange}),/*#__PURE__*/_jsx(\"span\",{children:\"\\uC6D0\"})]})]}),/*#__PURE__*/_jsx(\"button\",{className:`user-limit-next-button ${selectedStore&&budget>=3000?'active':''}`,onClick:handleNextClick,disabled:!selectedStore||budget<3000,children:\"\\uB2E4\\uC74C\\uC73C\\uB85C\"})]});}export default UserLimitScreen2;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","UserLimitScreen2","selectedStore","setSelectedStore","budget","setBudget","navigate","handleStoreClick","store","handleBudgetChange","e","target","value","handleNextClick","response","fetch","method","headers","body","JSON","stringify","store_type","max_price","data","json","success","console","log","menu_list","error","className","children","map","onClick","type","placeholder","onChange","disabled"],"sources":["C:/Users/Kdonghoon/OneDrive/바탕 화면/midtermProject_combined/FE/src/components/UserLimitScreen2/UserLimitScreen2.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './UserLimitScreen2.css';\r\n\r\nfunction UserLimitScreen2() {\r\n    const [selectedStore, setSelectedStore] = useState(null);\r\n    const [budget, setBudget] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    // 가게 선택 핸들러\r\n    const handleStoreClick = (store) => {\r\n        setSelectedStore(store);\r\n    };\r\n\r\n    // 예산 입력 핸들러\r\n    const handleBudgetChange = (e) => {\r\n        setBudget(e.target.value);\r\n    };\r\n\r\n    // \"다음으로\" 버튼 클릭 시 UserInputScreen으로 이동 및 API 호출\r\n    const handleNextClick = async () => {\r\n        if (selectedStore && budget >= 3000) {\r\n            // 서버로 데이터 전송\r\n            try {\r\n                const response = await fetch('/api/filter_menus', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        store_type: selectedStore,\r\n                        max_price: budget,\r\n                    }),\r\n                });\r\n\r\n                const data = await response.json();\r\n\r\n                if (data.success) {\r\n                    console.log('필터링된 메뉴 목록:', data.menu_list);\r\n                    // 데이터를 받아서 다음 페이지로 넘길 수 있음\r\n                    navigate('/user-input');\r\n                } else {\r\n                    console.error('메뉴 가져오기 오류:', data.error);\r\n                }\r\n            } catch (error) {\r\n                console.error('API 호출 오류:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"user-limit-container\">\r\n            <div className=\"logo-section\">\r\n                <h1>쿠잇나우 로고</h1>\r\n            </div>\r\n\r\n            {/* 가게 종류 선택 */}\r\n            <div className=\"section\">\r\n                <h2>가게 종류</h2>\r\n                <p>찾고 있는 가게의 종류에 따라 질문이 달라져요.</p>\r\n                <div className=\"store-buttons\">\r\n                    {['밥집', '카페', '술집'].map((store) => (\r\n                        <button\r\n                            key={store}\r\n                            className={`store-button ${selectedStore === store ? 'selected' : ''}`}\r\n                            onClick={() => handleStoreClick(store)}\r\n                        >\r\n                            {store}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* 예산 입력 */}\r\n            <div className=\"section\">\r\n                <h2>식사 예산</h2>\r\n                <p>다양한 메뉴 추천을 위해<br/>4000원 이상을 입력하는 걸 권장해요.</p>\r\n                <div className=\"budget-input-container\">\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"예산을 입력해주세요.\"\r\n                        value={budget}\r\n                        onChange={handleBudgetChange}\r\n                    />\r\n                    <span>원</span>\r\n                </div>\r\n            </div>\r\n\r\n            {/* 다음으로 버튼 */}\r\n            <button\r\n                className={`user-limit-next-button ${selectedStore && budget >= 3000 ? 'active' : ''}`}\r\n                onClick={handleNextClick}\r\n                disabled={!selectedStore || budget < 3000}\r\n            >\r\n                다음으로\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserLimitScreen2;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}