{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kdonghoon\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\midtermProject_combined\\\\FE\\\\src\\\\components\\\\UserLimitScreen2\\\\UserLimitScreen2.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './UserLimitScreen2.css';\nimport config from '../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserLimitScreen2() {\n  _s();\n  const [selectedStore, setSelectedStore] = useState(null);\n  const [budget, setBudget] = useState('');\n  const navigate = useNavigate();\n\n  //가게 선택 핸들러\n  const handleStoreClick = store => {\n    setSelectedStore(store);\n  };\n\n  //예산 입력 핸들러\n  const handleBudgetChange = e => {\n    setBudget(e.target.value);\n  };\n\n  //\"다음으로\" 버튼 클릭 시 UserInputScreen으로 이동\n  const handleNextClick = async () => {\n    if (selectedStore && parseInt(budget) >= 3000) {\n      try {\n        const response = await fetch(`${config.apiUrl}/api/filter_menus`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            store_type: selectedStore,\n            max_price: parseInt(budget)\n          })\n        });\n        const data = await response.json();\n        if (data.success) {\n          navigate('/user-input', {\n            state: {\n              menuList: data.menu_list,\n              selectedStore,\n              budget\n            }\n          });\n        } else {\n          throw new Error(data.error);\n        }\n      } catch (error) {\n        console.error(\"Error fetching menus:\", error);\n        alert(\"메뉴를 가져오는 중 오류가 발생했습니다. 다시 시도해 주세요.\");\n      }\n    } else {\n      alert(\"가게 종류를 선택하고 3000원 이상의 예산을 입력해주세요.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-limit-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"\\\\tottenham.png\",\n        alt: \"\\uC784\\uC2DC\\uB85C\\uACE0\",\n        className: \"logo-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uAC00\\uAC8C \\uC885\\uB958\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uCC3E\\uACE0 \\uC788\\uB294 \\uAC00\\uAC8C\\uC758 \\uC885\\uB958\\uC5D0 \\uB530\\uB77C \\uC9C8\\uBB38\\uC774 \\uB2EC\\uB77C\\uC838\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"store-buttons\",\n        children: ['restaurant', 'cafe', 'bar'].map(store => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `store-button ${selectedStore === store ? 'selected' : ''}`,\n          onClick: () => handleStoreClick(store),\n          style: {\n            backgroundImage: `url(/${store}.png)`,\n            // 여기서 public 폴더의 이미지를 참조\n            backgroundSize: 'contain',\n            backgroundRepeat: 'no-repeat',\n            width: '100px',\n            // 버튼 크기 설정\n            height: '100px',\n            borderRadius: '15px',\n            border: '2px solid lightgray',\n            // 선택된 경우 테두리 색 변경\n            padding: '0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              visibility: 'hidden'\n            },\n            children: store\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), ' ']\n        }, store, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC2DD\\uC0AC \\uC608\\uC0B0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uB2E4\\uC591\\uD55C \\uBA54\\uB274 \\uCD94\\uCC9C\\uC744 \\uC704\\uD574\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }, this), \"4000\\uC6D0 \\uC774\\uC0C1\\uC744 \\uC785\\uB825\\uD558\\uB294 \\uAC78 \\uAD8C\\uC7A5\\uD574\\uC694.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"budget-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"\\uC608\\uC0B0\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n          value: budget,\n          onChange: handleBudgetChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uC6D0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `user-limit-next-button ${selectedStore && parseInt(budget) >= 3000 ? 'active' : ''}`,\n      onClick: handleNextClick,\n      disabled: !selectedStore || parseInt(budget) < 3000,\n      children: \"\\uB2E4\\uC74C\\uC73C\\uB85C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(UserLimitScreen2, \"2UfsTDRxjodl4jCAhQIWlKQZhsQ=\", false, function () {\n  return [useNavigate];\n});\n_c = UserLimitScreen2;\nexport default UserLimitScreen2;\nvar _c;\n$RefreshReg$(_c, \"UserLimitScreen2\");","map":{"version":3,"names":["React","useState","useNavigate","config","jsxDEV","_jsxDEV","UserLimitScreen2","_s","selectedStore","setSelectedStore","budget","setBudget","navigate","handleStoreClick","store","handleBudgetChange","e","target","value","handleNextClick","parseInt","response","fetch","apiUrl","method","headers","body","JSON","stringify","store_type","max_price","data","json","success","state","menuList","menu_list","Error","error","console","alert","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","style","backgroundImage","backgroundSize","backgroundRepeat","width","height","borderRadius","border","padding","visibility","type","placeholder","onChange","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Kdonghoon/OneDrive/바탕 화면/midtermProject_combined/FE/src/components/UserLimitScreen2/UserLimitScreen2.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './UserLimitScreen2.css';\r\nimport config from '../../config';\r\n\r\nfunction UserLimitScreen2() {\r\n    const [selectedStore, setSelectedStore] = useState(null);\r\n    const [budget, setBudget] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    //가게 선택 핸들러\r\n    const handleStoreClick = (store) => {\r\n        setSelectedStore(store);\r\n    };\r\n\r\n    //예산 입력 핸들러\r\n    const handleBudgetChange = (e) => {\r\n        setBudget(e.target.value);\r\n    };\r\n\r\n    //\"다음으로\" 버튼 클릭 시 UserInputScreen으로 이동\r\n    const handleNextClick = async () => {\r\n        if (selectedStore && parseInt(budget) >= 3000) {\r\n            try {\r\n                const response = await fetch(`${config.apiUrl}/api/filter_menus`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        store_type: selectedStore,\r\n                        max_price: parseInt(budget)\r\n                    }),\r\n                });\r\n                const data = await response.json();\r\n                if (data.success) {\r\n                    navigate('/user-input', { \r\n                        state: { \r\n                            menuList: data.menu_list, \r\n                            selectedStore, \r\n                            budget \r\n                        } \r\n                    });\r\n                } else {\r\n                    throw new Error(data.error);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching menus:\", error);\r\n                alert(\"메뉴를 가져오는 중 오류가 발생했습니다. 다시 시도해 주세요.\");\r\n            }\r\n        } else {\r\n            alert(\"가게 종류를 선택하고 3000원 이상의 예산을 입력해주세요.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"user-limit-container\">\r\n            <header className=\"header\">\r\n                <img src=\"\\tottenham.png\" alt=\"임시로고\" className=\"logo-image\" />\r\n            </header>\r\n            \r\n            <div className=\"section\">\r\n                <h2>가게 종류</h2>\r\n                <p>찾고 있는 가게의 종류에 따라 질문이 달라져요.</p>\r\n                <div className=\"store-buttons\">\r\n                    {['restaurant', 'cafe', 'bar'].map((store) => (\r\n                        <button\r\n                            key={store}\r\n                            className={`store-button ${selectedStore === store ? 'selected' : ''}`}\r\n                            onClick={() => handleStoreClick(store)}\r\n                            style={{\r\n                                backgroundImage: `url(/${store}.png)`, // 여기서 public 폴더의 이미지를 참조\r\n                                backgroundSize: 'contain',\r\n                                backgroundRepeat: 'no-repeat',\r\n                                width: '100px', // 버튼 크기 설정\r\n                                height: '100px',\r\n                                borderRadius: '15px',\r\n                                border: '2px solid lightgray', // 선택된 경우 테두리 색 변경\r\n                                padding: '0',\r\n                            }}\r\n                        > \r\n                            <span style={{ visibility: 'hidden' }}>{store}</span>{' '}\r\n                            {/* 텍스트 숨김 */}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"section\">\r\n                <h2>식사 예산</h2>\r\n                <p>다양한 메뉴 추천을 위해<br/>4000원 이상을 입력하는 걸 권장해요.</p>\r\n                <div className=\"budget-input-container\">\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"예산을 입력해주세요.\"\r\n                        value={budget}\r\n                        onChange={handleBudgetChange}\r\n                    />\r\n                    <span>원</span>\r\n                </div>\r\n            </div>\r\n\r\n            <button\r\n                className={`user-limit-next-button ${selectedStore && parseInt(budget) >= 3000 ? 'active' : ''}`}\r\n                onClick={handleNextClick}\r\n                disabled={!selectedStore || parseInt(budget) < 3000}\r\n            >\r\n                다음으로\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserLimitScreen2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}