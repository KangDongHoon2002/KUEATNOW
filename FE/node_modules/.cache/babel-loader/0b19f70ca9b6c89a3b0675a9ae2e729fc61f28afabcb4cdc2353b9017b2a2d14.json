{"ast":null,"code":"import React,{useState}from'react';import'./UserInputScreen.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function UserInputScreen(){const[messages,setMessages]=useState([{sender:'character',text:'안녕하세요! [character_name]와 대화를 통해 지금 딱 먹고 싶은 음식을 골라보세요!'},{sender:'user',text:'네, 감사합니다!'}]);const[input,setInput]=useState('');const handleInputChange=e=>{setInput(e.target.value);};const handleSendMessage=()=>{if(input.trim()!==''){setMessages([...messages,{sender:'user',text:input}]);setInput('');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"chat-header\",children:\"\\uCFE0\\uC787\\uB098\\uC6B0\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-messages\",children:messages.map((msg,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`message ${msg.sender}`,children:[msg.sender==='character'&&/*#__PURE__*/_jsx(\"div\",{className:`circle ${msg.sender}`}),/*#__PURE__*/_jsx(\"div\",{className:\"message-bubble\",children:msg.text})]},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input,onChange:handleInputChange,placeholder:\"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",className:\"chat-input\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendMessage,className:\"send-button\",children:\"\\u25B6\"})]})]});}export default UserInputScreen;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","UserInputScreen","messages","setMessages","sender","text","input","setInput","handleInputChange","e","target","value","handleSendMessage","trim","className","children","map","msg","index","type","onChange","placeholder","onClick"],"sources":["C:/Users/Kdonghoon/OneDrive/바탕 화면/midtermProject_combined/FE/src/components/UserInputScreen/UserInputScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './UserInputScreen.css';\r\n\r\nfunction UserInputScreen() {\r\n    const [messages, setMessages] = useState([\r\n        { sender: 'character', text: '안녕하세요! [character_name]와 대화를 통해 지금 딱 먹고 싶은 음식을 골라보세요!' },\r\n        { sender: 'user', text: '네, 감사합니다!' },\r\n    ]);\r\n    const [input, setInput] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n    const handleSendMessage = () => {\r\n        if (input.trim() !== '') {\r\n            setMessages([...messages, { sender: 'user', text: input }]);\r\n            setInput('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <header className=\"chat-header\">쿠잇나우</header>\r\n            <div className=\"chat-messages\">\r\n                {messages.map((msg, index) => (\r\n                    <div key={index} className={`message ${msg.sender}`}>\r\n                        {/* 캐릭터 메시지에만 동그라미 표시 */}\r\n                        {msg.sender === 'character' && <div className={`circle ${msg.sender}`}></div>}\r\n                        <div className=\"message-bubble\">{msg.text}</div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"chat-input-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={input}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"메시지를 입력해주세요.\"\r\n                    className=\"chat-input\"\r\n                />\r\n                <button onClick={handleSendMessage} className=\"send-button\">\r\n                    ▶\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserInputScreen;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/B,QAAS,CAAAC,eAAeA,CAAA,CAAG,CACvB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGP,QAAQ,CAAC,CACrC,CAAEQ,MAAM,CAAE,WAAW,CAAEC,IAAI,CAAE,uDAAwD,CAAC,CACtF,CAAED,MAAM,CAAE,MAAM,CAAEC,IAAI,CAAE,WAAY,CAAC,CACxC,CAAC,CACF,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAEtC,KAAM,CAAAY,iBAAiB,CAAIC,CAAC,EAAK,CAC7BF,QAAQ,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC5B,CAAC,CAED,KAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAM,CAC5B,GAAIN,KAAK,CAACO,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CACrBV,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAAE,CAAEE,MAAM,CAAE,MAAM,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAC,CAAC,CAC3DC,QAAQ,CAAC,EAAE,CAAC,CAChB,CACJ,CAAC,CAED,mBACIP,KAAA,QAAKc,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC3BjB,IAAA,WAAQgB,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,0BAAI,CAAQ,CAAC,cAC7CjB,IAAA,QAAKgB,SAAS,CAAC,eAAe,CAAAC,QAAA,CACzBb,QAAQ,CAACc,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,gBACrBlB,KAAA,QAAiBc,SAAS,CAAE,WAAWG,GAAG,CAACb,MAAM,EAAG,CAAAW,QAAA,EAE/CE,GAAG,CAACb,MAAM,GAAK,WAAW,eAAIN,IAAA,QAAKgB,SAAS,CAAE,UAAUG,GAAG,CAACb,MAAM,EAAG,CAAM,CAAC,cAC7EN,IAAA,QAAKgB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAAEE,GAAG,CAACZ,IAAI,CAAM,CAAC,GAH1Ca,KAIL,CACR,CAAC,CACD,CAAC,cACNlB,KAAA,QAAKc,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eACjCjB,IAAA,UACIqB,IAAI,CAAC,MAAM,CACXR,KAAK,CAAEL,KAAM,CACbc,QAAQ,CAAEZ,iBAAkB,CAC5Ba,WAAW,CAAC,gEAAc,CAC1BP,SAAS,CAAC,YAAY,CACzB,CAAC,cACFhB,IAAA,WAAQwB,OAAO,CAAEV,iBAAkB,CAACE,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,QAE5D,CAAQ,CAAC,EACR,CAAC,EACL,CAAC,CAEd,CAEA,cAAe,CAAAd,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}