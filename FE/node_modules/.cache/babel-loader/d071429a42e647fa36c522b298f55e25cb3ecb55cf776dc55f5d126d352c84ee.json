{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kdonghoon\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\midtermProject_combined\\\\FE\\\\src\\\\components\\\\UserInputScreen\\\\UserInputScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './UserInputScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserInputScreen() {\n  _s();\n  // 초기 메시지와 사용자 및 캐릭터의 대화 상태\n  const [messages, setMessages] = useState([{\n    sender: 'character',\n    text: '안녕하세요! [character_name]와 대화를 통해 지금 딱 먹고 싶은 음식을 골라보세요!'\n  }, {\n    sender: 'user',\n    text: '네, 감사합니다!'\n  }]);\n  const [input, setInput] = useState('');\n  const [menuList, setMenuList] = useState([]); // 메뉴 목록을 저장하는 상태\n  const [menuResList, setMenuResList] = useState([]); // 사용자 응답을 저장하는 상태\n  const [menuQuesList, setMenuQuesList] = useState([]); // 질문 목록\n\n  // 입력값 변경 핸들러\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n\n  // 메시지 전송 및 다음 질문 요청\n  const handleSendMessage = async () => {\n    if (input.trim() !== '') {\n      // 사용자 입력 메시지 추가\n      const userMessage = {\n        sender: 'user',\n        text: input\n      };\n      setMessages(prevMessages => [...prevMessages, userMessage]);\n      const updatedMenuResList = [...menuResList, input]; // 사용자 응답 추가\n      setInput(''); // 입력 필드 초기화\n\n      try {\n        // Flask API로 다음 질문 요청\n        const response = await fetch('/api/menu-selection/question', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            menu_list: menuList,\n            // 현재 메뉴 리스트\n            menu_res_list: updatedMenuResList // 사용자 응답 리스트\n          })\n        });\n        const data = await response.json();\n        if (data.success) {\n          const newQuestion = data.menu_ques;\n          // 새로운 질문을 캐릭터의 메시지로 추가\n          const characterMessage = {\n            sender: 'character',\n            text: newQuestion\n          };\n          setMessages(prevMessages => [...prevMessages, characterMessage]);\n          setMenuResList(updatedMenuResList); // 사용자 응답 리스트 업데이트\n          setMenuQuesList(prevQuesList => [...prevQuesList, newQuestion]); // 질문 리스트 업데이트\n        } else {\n          console.error('Error:', data.error);\n        }\n      } catch (error) {\n        console.error('API 호출 오류:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"chat-header\",\n      children: \"\\uCFE0\\uC787\\uB098\\uC6B0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: [msg.sender === 'character' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `circle ${msg.sender}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 56\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-bubble\",\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: handleInputChange,\n        placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        className: \"chat-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        className: \"send-button\",\n        children: \"\\u25B6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(UserInputScreen, \"XJ9JncmbMrEez/KPpfCHVMbChA0=\");\n_c = UserInputScreen;\nexport default UserInputScreen;\nvar _c;\n$RefreshReg$(_c, \"UserInputScreen\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserInputScreen","_s","messages","setMessages","sender","text","input","setInput","menuList","setMenuList","menuResList","setMenuResList","menuQuesList","setMenuQuesList","handleInputChange","e","target","value","handleSendMessage","trim","userMessage","prevMessages","updatedMenuResList","response","fetch","method","headers","body","JSON","stringify","menu_list","menu_res_list","data","json","success","newQuestion","menu_ques","characterMessage","prevQuesList","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Kdonghoon/OneDrive/바탕 화면/midtermProject_combined/FE/src/components/UserInputScreen/UserInputScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './UserInputScreen.css';\r\n\r\nfunction UserInputScreen() {\r\n    // 초기 메시지와 사용자 및 캐릭터의 대화 상태\r\n    const [messages, setMessages] = useState([\r\n        { sender: 'character', text: '안녕하세요! [character_name]와 대화를 통해 지금 딱 먹고 싶은 음식을 골라보세요!' },\r\n        { sender: 'user', text: '네, 감사합니다!' },\r\n    ]);\r\n    const [input, setInput] = useState('');\r\n    const [menuList, setMenuList] = useState([]); // 메뉴 목록을 저장하는 상태\r\n    const [menuResList, setMenuResList] = useState([]); // 사용자 응답을 저장하는 상태\r\n    const [menuQuesList, setMenuQuesList] = useState([]); // 질문 목록\r\n\r\n    // 입력값 변경 핸들러\r\n    const handleInputChange = (e) => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n    // 메시지 전송 및 다음 질문 요청\r\n    const handleSendMessage = async () => {\r\n        if (input.trim() !== '') {\r\n            // 사용자 입력 메시지 추가\r\n            const userMessage = { sender: 'user', text: input };\r\n            setMessages((prevMessages) => [...prevMessages, userMessage]);\r\n            const updatedMenuResList = [...menuResList, input]; // 사용자 응답 추가\r\n            setInput(''); // 입력 필드 초기화\r\n\r\n            try {\r\n                // Flask API로 다음 질문 요청\r\n                const response = await fetch('/api/menu-selection/question', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        menu_list: menuList, // 현재 메뉴 리스트\r\n                        menu_res_list: updatedMenuResList, // 사용자 응답 리스트\r\n                    }),\r\n                });\r\n\r\n                const data = await response.json();\r\n                if (data.success) {\r\n                    const newQuestion = data.menu_ques;\r\n                    // 새로운 질문을 캐릭터의 메시지로 추가\r\n                    const characterMessage = { sender: 'character', text: newQuestion };\r\n                    setMessages((prevMessages) => [...prevMessages, characterMessage]);\r\n                    setMenuResList(updatedMenuResList); // 사용자 응답 리스트 업데이트\r\n                    setMenuQuesList((prevQuesList) => [...prevQuesList, newQuestion]); // 질문 리스트 업데이트\r\n                } else {\r\n                    console.error('Error:', data.error);\r\n                }\r\n            } catch (error) {\r\n                console.error('API 호출 오류:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <header className=\"chat-header\">쿠잇나우</header>\r\n            <div className=\"chat-messages\">\r\n                {messages.map((msg, index) => (\r\n                    <div key={index} className={`message ${msg.sender}`}>\r\n                        {msg.sender === 'character' && <div className={`circle ${msg.sender}`}></div>}\r\n                        <div className=\"message-bubble\">{msg.text}</div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"chat-input-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={input}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"메시지를 입력해주세요.\"\r\n                    className=\"chat-input\"\r\n                />\r\n                <button onClick={handleSendMessage} className=\"send-button\">\r\n                    ▶\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserInputScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}