{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kdonghoon\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\midtermProject_combined\\\\FE\\\\src\\\\components\\\\UserLimitScreen2\\\\UserLimitScreen2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './UserLimitScreen2.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserInputScreen() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [menuList, setMenuList] = useState([]);\n  const [questionCount, setQuestionCount] = useState(0);\n  const [recommendedMenus, setRecommendedMenus] = useState([]);\n  const location = useLocation();\n  const navigate = useNavigate(); // navigate 사용해서 리다이렉트 가능\n\n  useEffect(() => {\n    // location.state가 null일 경우 기본값으로 처리하거나 에러 페이지로 리다이렉트\n    if (!location.state) {\n      console.error(\"location.state가 null입니다.\");\n      setMessages([{\n        sender: 'character',\n        text: '잘못된 접근입니다. 다시 시도해주세요.'\n      }]);\n      return;\n    }\n    const {\n      menuList = [],\n      selectedStore = 'unknown store',\n      budget = 0\n    } = location.state;\n    setMenuList(menuList);\n    setMessages([{\n      sender: 'character',\n      text: `안녕하세요! 쿠잇나우입니다. ${selectedStore}에서 예산 ${budget}원으로 먹고 싶은 음식을 찾아보겠습니다.`\n    }]);\n    askQuestion(menuList, []);\n  }, [location]);\n  const askQuestion = async (currentMenuList, prevResponses) => {\n    try {\n      const response = await axios.post('/api/menu-selection/question', {\n        menu_list: currentMenuList,\n        menu_res_list: prevResponses\n      });\n      setMessages(prev => [...prev, {\n        sender: 'character',\n        text: response.data.menu_ques\n      }]);\n    } catch (error) {\n      console.error('Error asking question:', error);\n    }\n  };\n  const handleSendMessage = async () => {\n    if (input.trim() !== '') {\n      setMessages(prev => [...prev, {\n        sender: 'user',\n        text: input\n      }]);\n      setQuestionCount(prev => prev + 1);\n      if (questionCount < 5) {\n        try {\n          const response = await axios.post('/api/menu-selection/recommend', {\n            menu_list: menuList,\n            menu_ques_list: messages.filter(msg => msg.sender === 'character').map(msg => msg.text),\n            menu_res_list: [...messages.filter(msg => msg.sender === 'user').map(msg => msg.text), input]\n          });\n          const newRecommendedMenus = response.data.recommended_menu.split(',').map(m => m.trim());\n          setRecommendedMenus(newRecommendedMenus);\n          setMessages(prev => [...prev, {\n            sender: 'character',\n            text: `추천 메뉴: ${newRecommendedMenus.join(', ')}`\n          }, {\n            sender: 'character',\n            text: '이 중에서 마음에 드는 메뉴가 있나요? 있다면 선택해주세요. 없다면 \"없음\"이라고 말씀해주세요.'\n          }]);\n        } catch (error) {\n          console.error('Error recommending menu:', error);\n        }\n      } else {\n        setMessages(prev => [...prev, {\n          sender: 'character',\n          text: '죄송합니다. 더 이상 질문할 수 없습니다. 추천된 메뉴 중에서 선택해주세요.'\n        }]);\n      }\n      setInput('');\n    }\n  };\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.sender}`,\n      children: message.text\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: handleInputChange,\n      placeholder: \"\\uB2F5\\uBCC0\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"\\uBCF4\\uB0B4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(UserInputScreen, \"VjUB/4Icx2Wn8MFDlkSsMytXnnk=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = UserInputScreen;\nexport default UserInputScreen;\nvar _c;\n$RefreshReg$(_c, \"UserInputScreen\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","UserInputScreen","_s","messages","setMessages","input","setInput","menuList","setMenuList","questionCount","setQuestionCount","recommendedMenus","setRecommendedMenus","location","navigate","state","console","error","sender","text","selectedStore","budget","askQuestion","currentMenuList","prevResponses","response","post","menu_list","menu_res_list","prev","data","menu_ques","handleSendMessage","trim","menu_ques_list","filter","msg","map","newRecommendedMenus","recommended_menu","split","m","join","handleInputChange","e","target","value","className","children","message","index","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Kdonghoon/OneDrive/바탕 화면/midtermProject_combined/FE/src/components/UserLimitScreen2/UserLimitScreen2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './UserLimitScreen2.css';\r\n\r\nfunction UserInputScreen() {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState('');\r\n    const [menuList, setMenuList] = useState([]);\r\n    const [questionCount, setQuestionCount] = useState(0);\r\n    const [recommendedMenus, setRecommendedMenus] = useState([]);\r\n    const location = useLocation();\r\n    const navigate = useNavigate();  // navigate 사용해서 리다이렉트 가능\r\n\r\n    useEffect(() => {\r\n        // location.state가 null일 경우 기본값으로 처리하거나 에러 페이지로 리다이렉트\r\n        if (!location.state) {\r\n            console.error(\"location.state가 null입니다.\");\r\n            setMessages([{ sender: 'character', text: '잘못된 접근입니다. 다시 시도해주세요.' }]);\r\n            return;\r\n        }\r\n\r\n        const { menuList = [], selectedStore = 'unknown store', budget = 0 } = location.state;\r\n        setMenuList(menuList);\r\n        setMessages([\r\n            { sender: 'character', text: `안녕하세요! 쿠잇나우입니다. ${selectedStore}에서 예산 ${budget}원으로 먹고 싶은 음식을 찾아보겠습니다.` }\r\n        ]);\r\n        askQuestion(menuList, []);\r\n    }, [location]);\r\n\r\n    const askQuestion = async (currentMenuList, prevResponses) => {\r\n        try {\r\n            const response = await axios.post('/api/menu-selection/question', {\r\n                menu_list: currentMenuList,\r\n                menu_res_list: prevResponses\r\n            });\r\n            setMessages(prev => [...prev, { sender: 'character', text: response.data.menu_ques }]);\r\n        } catch (error) {\r\n            console.error('Error asking question:', error);\r\n        }\r\n    };\r\n\r\n    const handleSendMessage = async () => {\r\n        if (input.trim() !== '') {\r\n            setMessages(prev => [...prev, { sender: 'user', text: input }]);\r\n            setQuestionCount(prev => prev + 1);\r\n\r\n            if (questionCount < 5) {\r\n                try {\r\n                    const response = await axios.post('/api/menu-selection/recommend', {\r\n                        menu_list: menuList,\r\n                        menu_ques_list: messages.filter(msg => msg.sender === 'character').map(msg => msg.text),\r\n                        menu_res_list: [...messages.filter(msg => msg.sender === 'user').map(msg => msg.text), input]\r\n                    });\r\n                    const newRecommendedMenus = response.data.recommended_menu.split(',').map(m => m.trim());\r\n                    setRecommendedMenus(newRecommendedMenus);\r\n                    setMessages(prev => [\r\n                        ...prev,\r\n                        { sender: 'character', text: `추천 메뉴: ${newRecommendedMenus.join(', ')}` },\r\n                        { sender: 'character', text: '이 중에서 마음에 드는 메뉴가 있나요? 있다면 선택해주세요. 없다면 \"없음\"이라고 말씀해주세요.' }\r\n                    ]);\r\n                } catch (error) {\r\n                    console.error('Error recommending menu:', error);\r\n                }\r\n            } else {\r\n                setMessages(prev => [...prev, { sender: 'character', text: '죄송합니다. 더 이상 질문할 수 없습니다. 추천된 메뉴 중에서 선택해주세요.' }]);\r\n            }\r\n            setInput('');\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            {/* 기존 JSX 코드 유지 */}\r\n            {messages.map((message, index) => (\r\n                <div key={index} className={`message ${message.sender}`}>\r\n                    {message.text}\r\n                </div>\r\n            ))}\r\n            <input\r\n                type=\"text\"\r\n                value={input}\r\n                onChange={handleInputChange}\r\n                placeholder=\"답변을 입력하세요\"\r\n            />\r\n            <button onClick={handleSendMessage}>보내기</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserInputScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}